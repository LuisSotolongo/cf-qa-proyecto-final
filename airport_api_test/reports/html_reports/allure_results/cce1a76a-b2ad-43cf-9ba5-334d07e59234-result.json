{"name": "test_create_airport_success", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://cf-automation-airline-api.onrender.com/airports", "trace": "auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c3ItOWQxNWUyNzIiLCJyb2xlIjoiYWRtaW4ifQ.zqxWBnG-pflzUMiSznhGyZodzP9gJtpp3yHroB18YjU', 'Content-Type': 'application/json'}\n\n    @pytest.fixture(scope=\"function\")\n    def create_airport(auth_headers):\n        airport_data = {\n            \"iata_code\": fake.unique.lexify(text=\"???\", letters=string.ascii_uppercase),\n            \"city\": fake.city(),\n            \"country\": fake.country_code(representation=\"alpha-2\")\n        }\n>       response = api_request(\"post\", BASE_URL + AIRPORTS, json=airport_data, headers=auth_headers)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nairport_api_test/test/conftest.py:477: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.11/site-packages/tenacity/__init__.py:338: in wrapped_f\n    return copy(f, *args, **kw)\n           ^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.11/site-packages/tenacity/__init__.py:477: in __call__\n    do = self.iter(retry_state=retry_state)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.11/site-packages/tenacity/__init__.py:378: in iter\n    result = action(retry_state)\n             ^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.11/site-packages/tenacity/__init__.py:420: in exc_check\n    raise retry_exc.reraise()\n          ^^^^^^^^^^^^^^^^^^^\nvenv/lib/python3.11/site-packages/tenacity/__init__.py:187: in reraise\n    raise self.last_attempt.result()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.11/concurrent/futures/_base.py:449: in result\n    return self.__get_result()\n           ^^^^^^^^^^^^^^^^^^^\n/usr/lib/python3.11/concurrent/futures/_base.py:401: in __get_result\n    raise self._exception\nvenv/lib/python3.11/site-packages/tenacity/__init__.py:480: in __call__\n    result = fn(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^\nairport_api_test/utils/api_helpers.py:8: in api_request\n    try:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://cf-automation-airline-api.onrender.com/airports\n\nvenv/lib/python3.11/site-packages/requests/models.py:1026: HTTPError"}, "attachments": [{"name": "stdout", "source": "3b8a8188-e03e-45de-8ea3-aef652343791-attachment.txt", "type": "text/plain"}], "start": 1757698372384, "stop": 1757698372384, "uuid": "16820ba0-623d-4f01-af57-665da0a0e9ae", "historyId": "98459b119693147e68f1aff494cd6448", "testCaseId": "98459b119693147e68f1aff494cd6448", "fullName": "airport_api_test.test.airports.test_airports#test_create_airport_success", "labels": [{"name": "parentSuite", "value": "airport_api_test.test.airports"}, {"name": "suite", "value": "test_airports"}, {"name": "host", "value": "LUIS-RODRIGUEZ-N23"}, {"name": "thread", "value": "2730779-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "airport_api_test.test.airports.test_airports"}], "titlePath": ["airport_api_test", "test", "airports", "test_airports.py"]}