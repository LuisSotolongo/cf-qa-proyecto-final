{"name": "test_create_booking_success", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://cf-automation-airline-api.onrender.com/users", "trace": "auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c3ItOWQxNWUyNzIiLCJyb2xlIjoiYWRtaW4ifQ.zqxWBnG-pflzUMiSznhGyZodzP9gJtpp3yHroB18YjU', 'Content-Type': 'application/json'}\n\n    @pytest.fixture(scope=\"function\")\n    def create_user(auth_headers):\n        timestamp = datetime.now().strftime(\"%Y%m%d%H%M%S%f\")\n        unique_email = f\"test_{timestamp}_{''.join(random.choices(string.ascii_lowercase + string.digits, k=8))}@example.com\"\n        user_data = {\n            \"email\": unique_email,\n            \"password\": fake.password(),\n            \"full_name\": fake.name(),\n            \"role\": \"passenger\"\n        }\n        response = api_request(\"post\", f\"{BASE_URL}{USERS}\", json=user_data, headers=auth_headers)\n>       response.raise_for_status()\n\nairport_api_test/test/conftest.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://cf-automation-airline-api.onrender.com/users\n\nvenv/lib/python3.11/site-packages/requests/models.py:1026: HTTPError"}, "start": 1757700239463, "stop": 1757700239463, "uuid": "1018ff34-37c1-428e-8b6f-3c56fac7c8c4", "historyId": "b7df32b11a2258172fcd771a10949079", "testCaseId": "b7df32b11a2258172fcd771a10949079", "fullName": "airport_api_test.test.bookings.test_bookings#test_create_booking_success", "labels": [{"name": "parentSuite", "value": "airport_api_test.test.bookings"}, {"name": "suite", "value": "test_bookings"}, {"name": "host", "value": "LUIS-RODRIGUEZ-N23"}, {"name": "thread", "value": "2797797-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "airport_api_test.test.bookings.test_bookings"}], "titlePath": ["airport_api_test", "test", "bookings", "test_bookings.py"]}